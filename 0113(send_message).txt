문제 
{
    어떤 나라에는 N개의 도시가 있다.
    
    그리고 각 도시는 보내고자 하는 메시지가 있는 경우, 다른 도시로 전보를 보내서 다른 도시로 해당 메시지를 전송할 수 있다.
    
    하지만 X라는 도시에서 Y라는 도시로 전보를 보내고자 한다면, 도시 X에서 Y로 향하는 통로가 설치되어 있어야 한다.
    
    예를 들어 X에서 Y로 향하는 통로는 있지만, Y에서 X로 향하는 통로가 없다면 Y는 X로 메시지를 보낼 수 없다.
    
    또한 통로를 거쳐 메시지를 보낼 때는 일정 시간이 소요된다.
    
    어느 날 C라는 도시에서 위급 상황이 발생했다. 그래서 최대한 많은 도시로 메시지를 보내고자 한다.
    
    메시지는 도시 C에서 출발하여 각 도시 사이에 설치된 통로를 거쳐, 최대한 많이 퍼져나갈 것이다.
    
    각 도시의 번호와 통로가 설치되어 있는 정보가 주어졌을 때,
    
    도시 C에서 보낸 메시지를 받게 되는 도시의 개수는 총 몇 개이며
    
    도시들이 모두 메시지를 받는 데까지 걸리는 시간은 얼마인지 계산하는 프로그램을 작성하시오.
}

입력 조건
{
    첫째 줄에 도시의 개수 N, 통로의 개수 M, 메시지를 보내고자 하는 도시 C가 주어진다.
    
    (1 <= N <= 30,000, 1 <= M <= 200,000, 1 <= C <= N)
    
    둘째 줄부터 M + 1번째 줄에 걸쳐서 통로에 대한 정보 X, Y, Z가 주어진다.
    
    이는 특정 도시 X에서 다른 특정 도시 Y로 이어지는 통로가 있으며, 메시지가 전달되는 시간이 Z라는 의미다.
    
    (1 <= X, Y <= N, 1 <= Z <= 1,000)
}
 
출력 조건
{
    첫째 줄에 도시 C에서 보낸 메시지를 받는 도시의 총 개수와 총 걸리는 시간을 공백으로 구분하여 출력한다.
}
 

입력 예시1
{
    3 2 1
    1 2 4
    1 3 2
}
 

출력 예시1
{
    2 4
}


해결 방법
{
    기본적 아이디어 : 개선된 다익스트라 알고리즘 사용 -> 시간 복잡도 (MlogN) = 200000 * 20 = 4000000

    일단, 시작점이 정해져 있으며 시작점에서부터 갈 수 있는 도시의 값(테이블 내에 본인을 제외한 값 중 무한대가 아닌 값)과 
    
    이동하는 데 걸리는 시간을 저장하는 테이블에서의 최대값을 출력하면 될 것 같다.
    
    실제 해결 방법
    
    우선순위 큐를 활용하여 문제를 해결(BFS 느낌으로 q에 값이 존재하는 경우 반복하여 진행)

    1. input 값 입력받기

    2. 출발점 부터 시작하여 출발점에 해당하는 값((0, 출발점))을 우선순위 큐에 넣어준 후, queue가 빌 때까지 반복하여 진행

    3. 만약 table에 들어있는 값이 새로 계산한 값 보다 크다면 갱신(큐에 새로운 값 푸쉬)

    4. 테이블을 돌면서 INF에 해당하는 값을 카운트함과 동시에 -1로 값을 변경 후, max 함수를 이용하여 가장 큰 값을 출력
}

보완할 점
{
    실제로 board를 구성할 때, append를 잘 사용해야 하며 반복문의 범위 설정을 잘 해야 한다!!
}