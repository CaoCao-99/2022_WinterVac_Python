문제 
{
    고고학자인 "튜브"는 고대 유적지에서 보물과 유적이 가득할 것으로 추정되는 비밀의 문을 발견하였습니다. 
    
    그런데 문을 열려고 살펴보니 특이한 형태의 자물쇠로 잠겨 있었고 문 앞에는 특이한 형태의 열쇠와 함께 자물쇠를 푸는 방법에 대해 다음과 같이 설명해 주는 종이가 발견되었습니다.

    잠겨있는 자물쇠는 격자 한 칸의 크기가 1 x 1인 N x N 크기의 정사각 격자 형태이고 특이한 모양의 열쇠는 M x M 크기인 정사각 격자 형태로 되어 있습니다.

    자물쇠에는 홈이 파여 있고 열쇠 또한 홈과 돌기 부분이 있습니다. 열쇠는 회전과 이동이 가능하며 열쇠의 돌기 부분을 자물쇠의 홈 부분에 딱 맞게 채우면 자물쇠가 열리게 되는 구조입니다. 
    
    자물쇠 영역을 벗어난 부분에 있는 열쇠의 홈과 돌기는 자물쇠를 여는 데 영향을 주지 않지만, 
    
    자물쇠 영역 내에서는 열쇠의 돌기 부분과 자물쇠의 홈 부분이 정확히 일치해야 하며 열쇠의 돌기와 자물쇠의 돌기가 만나서는 안됩니다. 
    
    또한 자물쇠의 모든 홈을 채워 비어있는 곳이 없어야 자물쇠를 열 수 있습니다.

    열쇠를 나타내는 2차원 배열 key와 자물쇠를 나타내는 2차원 배열 lock이 매개변수로 주어질 때, 열쇠로 자물쇠를 열 수 있으면 true를, 
    
    열 수 없으면 false를 return 하도록 solution 함수를 완성해주세요.
}


제한 사항
{
    key는 M x M(3 ≤ M ≤ 20, M은 자연수)크기 2차원 배열입니다.
    
    lock은 N x N(3 ≤ N ≤ 20, N은 자연수)크기 2차원 배열입니다.
    
    M은 항상 N 이하입니다.
    
    key와 lock의 원소는 0 또는 1로 이루어져 있습니다.
    
    0은 홈 부분, 1은 돌기 부분을 나타냅니다.
}
 

입력 예시1
{
[[0, 0, 0], [1, 0, 0], [0, 1, 1]]
[[1, 1, 1], [1, 1, 0], [1, 0, 1]]
}
 

출력 예시1
{
    true
}


해결 방법
{
    기본적 아이디어 : 4가지 회전 + 상하좌우 끝까지 이동

    문제에서 주어진 이동 방법은 회전과 이동이다.

    문제에서 주어진 key에 해당하는 판을 lock에 해당하는 판 위에다가 이리저리 회전과 이동시키면서 모든 공간의 값이 1이되는 경우가 존재하면 true를 출력하면 된다.

    잘 생각해보면 회전은 4개만 가능하므로 for 반복문을 통해 key에 해당하는 배열의 값을 4번 회전하여 반복하고

    각 반복문 내부에서는 현재 갖고있는 key의 값을 상하좌우로 이동시키면 된다.

    위의 반복문에서 관건은 얼마나 반복을 시키느냐인데 key의 값이 하나라도 1이 된다면 시도 가능하게 반복문을 설정해야 할 것 같다.
    
    실제 해결 방법

    1. input 값 입력받기(key, lock)

    2. for 구문(4번이 회전에 해당하는 반복문)

    3. 오름차순으로 input 값을 정렬한 뒤 사이클을 만들지 않는 한 앞에서 부터 차례대로 union 연산을 수행한다.

    4. 가장 큰 값을 제외한 나머지 값의 합을 구한다.
}

보완할 점
{
    처음 아이디어를 떠올릴 때 간선이 아닌 노드를 제거한다고 생각하여 시간을 많이 허비한 것 같다.

    문제를 풀 때, 방법만 고수하기보다는 문제를 천천히 다시 읽는 것도 좋은 방법이다.
}