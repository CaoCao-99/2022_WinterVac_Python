문제 
{
    카카오에 신입 개발자로 입사한 "콘"은 선배 개발자로부터 개발역량 강화를 위해 다른 개발자가 작성한 소스 코드를 분석하여 문제점을 발견하고 수정하라는 업무 과제를 받았습니다. 소스를 컴파일하여 로그를 보니 대부분 소스 코드 내 작성된 괄호가 개수는 맞지만 짝이 맞지 않은 형태로 작성되어 오류가 나는 것을 알게 되었습니다.
    수정해야 할 소스 파일이 너무 많아서 고민하던 "콘"은 소스 코드에 작성된 모든 괄호를 뽑아서 올바른 순서대로 배치된 괄호 문자열을 알려주는 프로그램을 다음과 같이 개발하려고 합니다.
}
 
용어 정의
{

}


입력 조건
{
    첫째 줄에 지도의 세로 크기 N과 가로 크기 M이 주어진다. (3 ≤ N, M ≤ 8)

    둘째 줄부터 N개의 줄에 지도의 모양이 주어진다. 0은 빈 칸, 1은 벽, 2는 바이러스가 있는 위치이다. 2의 개수는 2보다 크거나 같고, 10보다 작거나 같은 자연수이다.

    빈 칸의 개수는 3개 이상이다.
}

출력 조건
{
    첫째 줄에 얻을 수 있는 안전 영역의 최대 크기를 출력한다.
}
 

입력 예시1
{
7 7
2 0 0 0 1 1 0
0 0 1 0 1 2 0
0 1 1 0 1 0 0
0 1 0 0 0 0 0
0 0 0 0 0 1 1
0 1 0 0 0 0 0
0 1 0 0 0 0 0
}
 

출력 예시1
{
27
}

입력 예시2
{
4 6
0 0 0 0 0 0
1 0 0 0 0 2
1 1 1 0 0 2
0 0 0 0 0 2
}
 

출력 예시2
{
9
}

입력 예시3
{
8 8
2 0 0 0 0 0 0 2
2 0 0 0 0 0 0 2
2 0 0 0 0 0 0 2
2 0 0 0 0 0 0 2
2 0 0 0 0 0 0 2
0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0
}
 

출력 예시3
{
3
}

해결 방법
{
    기본적 아이디어 : DFS + combinations 사용

    combinations을 사용하여 3개의 벽을 세울 수 있는 공간의 그룹을 받는다.

    해당 그룹에 벽을 세운 뒤에 바이러스에 해당하는 공간에서 DFS를 진행하여 바이러스가 퍼지는 공간의 최소값을 구한다.

    전체 칸에서 1의 개수와 최소값 + 3을 빼준다.
    
    실제 해결 방법

    1. input값 입력 받기

    2. combinations을 이용하여 반복하며 최소값 탐색
}

보완할 점
{
    문제에 접근은 쉽게 했으나 파이썬 내부의 작동 구조를 정확하게 알지 못 해 시간을 많이 소요했다.

    특히 리스트의 값을 초기화 할 때, copy.deepcopy()를 이용해야 값만 제대로 갖고 온다는 것도 알 수 있었다.
}