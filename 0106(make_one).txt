문제 
{
    정수 X에 사용할 수 있는 연산은 다음과 같이 세 가지 이다.

    1. X가 3으로 나누어 떨어지면, 3으로 나눈다.

    2. X가 2로 나누어 떨어지면, 2로 나눈다.

    3. 1을 뺀다.

    정수 N이 주어졌을 때, 위와 같은 연산 세 개를 적절히 사용해서 1을 만들려고 한다. 연산을 사용하는 횟수의 최솟값을 출력하시오.
}

입력 조건
{
   첫째 줄에 1보다 크거나 같고, 10^6보다 작거나 같은 정수 N이 주어진다.
}
 
출력 조건
{
    첫째 줄에 연산을 하는 횟수의 최솟값을 출력한다.
}
 

입력 예시
{
    2
}
 

출력 예시
{
    1
}


해결 방법
{
    기본적 아이디어 : DP
    함수를 생성하여 재귀적으로 문제를 해결한다.


    실제 해결 방법
    def recursive(data){
        cnt+=1
        if data==1:
            print(cnt)
            return
        elif data % 3 == 0:
            recursive(data // 3)
        elif data % 2 == 0:
            recursive(data//2)
        else:
            recursive(data-1)
    }
    처음에는 단순하게 위의 방법으로 하면 해결 할 수 있다고 판단했는데 
    위의 방법으로하면 최소 횟수를 구할 수 없다.

    2가지의 방법을 이용하여 횟수를 비교하여 답을 구해야 한다.

    1. data에서의 횟수(위의 방법)
    2. data - 1 에서의 횟수
}

보안할 점
{
    사실상 내가 푼 문제가 아니다.

    DP의 개념을 너무 많이 까먹고 푸는 것을 시도하여 에러가 발생했다.

    상단의 방법이 아닌 점화식을 잘 세우는 것이 DP의 핵심이라는 것을 잊으면 안된다.
}