문제 
{
    동네 편의점의 주인인 동빈이는 N개의 동전을 가지고 있습니다. 
    
    이때 N개의 동전을 이용하여 만들 수 없는 양의 정수 금액 중 최솟값을 구하는 프로그램을 작성하세요.

    예를 들어, N=5 이고, 각 동전이 각각 3원, 2원, 1원, 1원, 9원짜리(화폐 단위) 동전이라고 가정합시다. 
    
    이때 동빈이가 만들 수 없는 양의 정수 금액 중 최솟값은 8원입니다.

    또 다른 예시로, N=3이고, 각 동전이 각각 3원, 5원, 7원 동전이라고 가정합시다. 
    
    이때 동빈이가 만들 수 없는 양의 정수 금액 중 최솟값은 1원입니다.
}
 


출력 조건
{
   첫째 줄에 주어진 동전들로 만들 수 없는 양의 정수 금액 중 최솟값을 출력합니다.
}
 

입력 예시1
{
    5
    32119
}
 

출력 예시1
{
    8
}


해결 방법
{
    기본적 아이디어 : 탐욕적 접근방법

    들어온 input 값들을 정렬하여 리스트를 생성하고 작은 값 부터 값을 더해가며 생성할 수 있는 값의 리스트를 생성한다.

    예를 들어, 1, 1, 2, 3 의 경우 [1] -> [1,2] -> [1,2,1+2,2+2] -> [1,2,1+2,2+2,1+3,2+3,1+2+3,2+2+3] 이런식으로 반복문을 이용하여 더해준다.

    하지만 이 방법대로 하면 지수시간의 시간복잡도가 나오기 때문에 다른 방식을 생각해야 한다.

    **답지에 나온 해결 방법**

    1부터 차례대로 특정한 금액을 만들 수 있는지 확인

    1부터 target - 1 까지의 모든 금액을 만들수 있다고 가정한다.

    화폐 단위가 작은 순서대로 동전을 확인하며 현재 확인하는 동전을 이용해 target 금액을 만들 수 있는지 확인한다.

    만일 target 금액을 만들 수 있다면 target 값을 갱신시킨다. 
    
    실제 해결 방법

    1. input 값 입력받기

    2. 오름차순으로 input 값을 정렬한 뒤 target값과 비교하여 target의 값을 갱신해준다.
}

보완할 점
{
    탐욕적 접근 방식에 대해 너무 익숙하지 않은 것 같다. 

    꼭 다시 풀어야 하는 문제!
}