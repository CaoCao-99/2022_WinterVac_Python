DP는 아마 코딩테스트 문제 유형중 사람들이 가장 싫어하는 유형이지 않을까 싶다. 

그 말은 DP가 까다롭고 생각해내기 어렵다는 것이며 반대로 말하면 DP문제를 잘 풀 수 있어야 경쟁력이 생긴다는 것과 같다.

따라서, DP관련 문항들은 본 교제 뿐 아니라 이전에 풀었었던 코테 문제들을 활용하여 푸는 것이 좋을 것 같다.

한번, 손에 익으면 점화식과 배열을 사용하는 것이 익숙해지지만 익지 않으면 시간이 너무 많이 소비된다.

이전과 달리 DP에는 3일을 투자하자!(하루에 4문제)

DP : 점화식을 얼마나 잘 세우냐!

Memoization : 이전에 나왔던 결과들을 다른 공간에 저장하여 다음 문제를 풀 때, 이용하여 문제를 해결하는 것(별도의 리스트 사용)

예시 : 피보나치 수열
{
    d = [0]*100

    def fibo(x):
        if x== 1 or x == 2:
            return 1
        if d[x] != 0: # 이미 계산한 적이 있다면 계산 수행하지 않고 저장된 값을 반환
            return d[x]
        d[x] = fibo(x-1) + fibo(x-2)
        return(d[x])
}