문제 
{
    개미 전사는 부족한 식량을 충당하고자 메뚜기 마을의 식량창고를 몰래 공격하려고 합니다. 메뚜기 마을에는 여러 개의 식량창고가 있는데 식량창고는 일직선으로 이어져 있습니다.

    각 식량창고에는 정해진 수의 식량을 저장하고 있으며 개미 전사는 선택적으로 약탈하여 식량을 빼앗을 예정입니다. 
    
    이때 메뚜기 정찰병들은 일지선상에 존재하는 식량창고 중에서 서로 인접한 식량창고가 공격받으면 바로 알아챌 수 있습니다.

    따라서 개미 전사가 정찰병에게 들키지 않고 식량창고를 약탈하기 위해서는 최소한 한 칸 이상 떨어진 식량창고를 약탈해야 합니다.

    이때 개미 전사는 두 번째 식량창고와 네 번째 식량창고를 선택했을 때 최댓값인 총 8개의 식량을 빼앗을 수 있습니다. 
    
    개미 전사는 식량창고가 이렇게 일직선상일 때 최대한 많은 식량을 얻기를 윈합니다.

    개미전사를 위해 식량창고 N개에 대한 정보가 주어졌을 때 얻을 수 있는 식량의 최댓값을 구하는 프로그램을 작성하시오.
}

입력 조건
{
    첫째 줄에 식량창고의 개수 N이 주어집니다. (3≤N≤100)
    
    둘째 줄에 공백을 기준으로 각 식량창고에 저장된 식량의 개수 K가 주어집니다. (0≤K≤1,000)
}
 
출력 조건
{
    첫째 줄에 개미 전사가 얻을 수 있는 식량의 최댓값을 출력하세요.
}
 

입력 예시
{
    4
1 3 1 5
}
 

출력 예시
{
    8
}


해결 방법
{
    기본적 아이디어 : DP
    
    입력 값에는 양수만 존재하기 때문에 만약 창고가 하나만 존재하는 경우 무조건 점령하는 것이 좋다. answer[1] = d[1]

    2개 존재하는 경우에는 2가지 경우중 더 큰 창고를 점령하면 된다.  answer[2] = max(d[1],d[2])

    3개 존재하는 경우부터 상황이 2가지로 나뉘게 된다.(1,3 or 2)     answer[3] = max(d[1]+d[3], d[2])

    ... 1~....i 인 경우에는 i의 창고를 점령할지 말지에 따라서 2가지 경우로 나뉘어 지게 된다.

    i번 째 창고를 점령하는 경우(answer[i-2] + d[i]), i번 째 창고를 점령하지 않는 경우(answer[i-1])

    i값을 2부터 채우기 시작하면 위의 점화식이 성립될 수 있으며 i가 0,1일 때의 값은 앞서 말한 것 과 같이 정의할 수 있다.

    따라서, 점화식 answer[i] = max(answer[i-2] + data[i] , answer[i-1])
    

    실제 해결 방법
    위의 점화식을 이용하여 문제를 해결할 수 있다.
}

보완할 점{
    리스트의 범위 설정을 할 때, 0부터 할 것인지 1부터 할 것인지 주석처리하여 적어놓고 문제 풀이를 진행하자!
}