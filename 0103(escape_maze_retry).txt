문제 {
    N x M 크기의 직사각형 형태의 미로에 여러 마리의 괴물이 있어 이를 피해 탈출해야 한다. 
    
    현재 위치는 (1, 1)이고 미로의 출구는 (N,M)의 위치에 존재하며 한 번에 한 칸씩 이동할 수 있다. 
    
    괴물이 있는 부분은 0으로, 괴물이 없는 부분은 1로 표시되어 있다. 미로는 반드시 탈출할 수 있는 형태로 제시된다. 
    
    탈출하기 위해 움직여야 하는 최소 칸의 개수를 구하라. 칸을 셀 때는 시작 칸과 마지막 칸을 모두 포함해서 계산한다.
}
입력 조건
{
    첫째 줄에 두 정수 N, M(4 <= N, M <= 200)이 주어진다. 다음 N개의 줄에는 각각 M개의 정수(0혹은 1)로 미로의 정보가 주어진다. 

    각각의 수들은 공백 없이붙어서 입력으로 제시된다. 또한 시작 칸과 마지막 칸은 항상 1이다.
}
 
출력 조건
{
   첫째 줄에 최소 이동 칸의 개수를 출력한다.
}
 

입력 예시
{
    5 6
    101010
    111111
    000001
    111111
    111111
}
 

출력 예시
{
    10
}


해결 방법
{
    기본적 아이디어 : BFS
    BFS에서 가장 중요한 것은 if 문과 for문을 적절히 잘 사용하는 것
    우선, 최소 거리를 구해야 하며 시작 지점이 (1,1) 로 고정되있고 도착지는 (N,M)이기 때문에
    좌측이나 상단으로 다시 이동하는 경우는 결코 최소 거리가 될 수 없다. - X : 잘못된 생각
    시작 지점(1,1)에서 상하좌우 갈 수 있는 곳으로 이동하고 이동한 곳의 좌표를 queue에 집어 넣고 
    차례대로 이동하여 i,j의 값이 n,m이 되는 순간의 값을 비교하여 최소값을 도출한다.

    실제 해결 방법
    1. main 함수 작성하기(while(queue) + for 구문을 이용하여 좌표를 읽고 탐색하지 않은 경우에는 재귀함수를 호출한다.)
}

보안할 점
{
    사실상, 내가 푼 문제가 아니다. 이 문제는 다시 풀어봐야 한다.

    값을 board값에 넣는 것을 생각하지 못했다. 
}