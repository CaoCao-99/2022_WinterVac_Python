문제 {
    어떠한 수 N이 1이 될 때 까지 다음의 두 과정 중 하나를 반복적으로 선택해 수행하려 함

    단, 두번째 연산은 N이 K로 나누어 떨어질 때만 선택할 수 있음

    1. N에서 1을 뺀다.

    2. N을 K로 나눈다.

    N이 1이 될 때 까지 1번 혹은 2번의 과정을 수행해야하는 최소 횟수를 구하는 프로그램을 작성
}
입력 조건
{
   1. 첫째 줄에 N(2<= N <= 100000)과 K(2 <= K <= 100000)가 공백으로 구분되며 각각 자연수로 주어진다.

   2. 이때, 입력으로 주어지는 N은 항상 K보다 크거나 같다.
}
 
출력 조건
{
    첫째 줄에 N이 1이 될 때까지 1번 혹은 2번의 과정을 수행해야 하는 횟수의 최솟값을 출력한다.
}
 

입력 예시
{
    25 5
}
 

출력 예시
{
    2
}

해결 방법
{
    기본적 아이디어 : 탐욕적 접근
    1을 빼는 것 보다는 무조건 나누는 것이 횟수를 줄이는 방법이다.
    따라서, 우선적으로 나누기는 계속하여 반복하고 나눠 지지 않는 경우에는 1을 뺀 이후에 다시 나눠지는 지 체크하여 진행한다.


    실제 해결 방법
    1. while문 사용 (n != 1)
    2. K로 나누기 가능 -> 나누기 진행, 불가능 -> 빼기 진행
    3. 횟수 출력    
}

보안할 점
{
    C언어와 달리 파이썬에서는 '/' 기호를 사용하였을 때 실수형식으로 계산하기에 위와 같은 문제를 풀 때는 '//'를 사용하여 몫을 이용하여 사용해야 한다.
}